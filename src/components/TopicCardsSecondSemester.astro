---
const cardsData =
[
    {
        cardURL: 'second_semester_topics/arrays',
        cardFrontText: 'Arrays',
        cardBackText: 'const arr = []',
        topicNumber: 1
    },
    {
        cardURL: 'second_semester_topics/objects',
        cardFrontText: 'Objekter',
        cardBackText: 'const obj = {}',
        topicNumber: 2,
    },
    {
        cardURL: 'second_semester_topics/fetch',
        cardFrontText: 'Fetch',
        cardBackText: 'fetch()',
        topicNumber: 3
    },
    {
        cardURL: 'second_semester_topics/for_each',
        cardFrontText: 'Loop',
        cardBackText: '.forEach()',
        topicNumber: 4
    },
    {
        cardURL: 'second_semester_topics/query_selector_all',
        cardFrontText: 'Selector',
        cardBackText: '.querySelectorAll()',
        topicNumber: 5
    },
    {
        cardURL: 'second_semester_topics/template',
        cardFrontText: 'Template',
        cardBackText: '.cloneNode(), .cloneNode(true),\n .append()/.appendChild()',
        topicNumber: 6
    },
    {
        cardURL: 'second_semester_topics/url_parameters',
        cardFrontText: 'URL-parametre',
        cardBackText: 'URLSearchParams()',
        topicNumber: 7
    },
    {
        cardURL: 'second_semester_topics/attributes',
        cardFrontText: 'Attributter',
        cardBackText: '.getAttribute()/.setAttribute()',
        topicNumber: 8
    },
]
---

<>
    {
        cardsData.map((card) =>
        (
                <a href=`topics/${card.cardURL}`>
                    <div class="card topic-card">
                        <div class="inner-card">
                            <div class="front-card">
                                <h2>{card.cardFrontText}</h2>
                            </div>
                            <div class="back-card">
                                <h2>{card.cardBackText}</h2>
                            </div>
                        </div>
                    </div> 
                    <h3 class="topic-title"><span class="topic-number">{card.topicNumber}.</span>&nbsp;&nbsp;{card.cardFrontText}</h3>
                </a>
            )
         
        )
    }  
</>



<style>
    .container.card-container h4
    {
        font-family: 'Roboto', sans-serif;
        margin-top: 10px;
        font-size: 18px;
    }

    .topic-card
    {

        width: 300px;
        height: 200px;
        perspective: 1000px;
        cursor: pointer;
    }

    /* This container is needed to position the front and back side */
    .inner-card
    {
        position: relative;
        width: 100%;
        height: 100%;
        text-align: center;
        transition: transform 0.8s .4s;
        transform-style: preserve-3d;
    }

    .topic-card:hover .inner-card
    {
        transform: rotateY(-180deg);
    }

    .topic-card:hover .front-card h2
    {
   
        color: #ff0;
        transition: .3s ease-in;
    }

    .front-card, .back-card
    {
        white-space: pre-line;
        background-color: var(--topic-card-background-color);
        position: absolute;
        display: flex;
        justify-content: center;
        align-items: center;
        text-align: center;
    
        width: 100%;
        height: 100%;
        background-color: var(--topic-card-background-color);
        border-radius: calc(var(--base-border-radius) / 1.5);
        -webkit-backface-visibility: hidden; /* Safari */
        backface-visibility: hidden;
    }

    .back-card
    {     
        background-color: var(--topic-card-background-color);
        transform: rotateY(180deg);
    }

    .back-card h2
    {
        padding: 10px 60px;
        white-space: pre;
    }

    .topic-title
    {
        text-align: left;
        margin-top: 10px;
        margin-bottom: 15px;
    }
    .topic-number
    {
        color: #ff0;
    }
</style>